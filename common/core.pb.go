// Code generated by protoc-gen-go.
// source: core.proto
// DO NOT EDIT!

/*
Package common is a generated protocol buffer package.

It is generated from these files:
	core.proto

It has these top-level messages:
	Event
	Location
	EventParticipant
	Friend
*/
package common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type AttendanceResponse int32

const (
	AttendanceResponse_NO_RESPONSE   AttendanceResponse = 0
	AttendanceResponse_NO_ASSIST     AttendanceResponse = 1
	AttendanceResponse_CANNOT_ASSIST AttendanceResponse = 2
	AttendanceResponse_ASSIST        AttendanceResponse = 3
)

var AttendanceResponse_name = map[int32]string{
	0: "NO_RESPONSE",
	1: "NO_ASSIST",
	2: "CANNOT_ASSIST",
	3: "ASSIST",
}
var AttendanceResponse_value = map[string]int32{
	"NO_RESPONSE":   0,
	"NO_ASSIST":     1,
	"CANNOT_ASSIST": 2,
	"ASSIST":        3,
}

func (x AttendanceResponse) String() string {
	return proto.EnumName(AttendanceResponse_name, int32(x))
}
func (AttendanceResponse) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type MessageStatus int32

const (
	MessageStatus_NO_DELIVERED     MessageStatus = 0
	MessageStatus_SERVER_DELIVERED MessageStatus = 1
	MessageStatus_CLIENT_DELIVERED MessageStatus = 2
)

var MessageStatus_name = map[int32]string{
	0: "NO_DELIVERED",
	1: "SERVER_DELIVERED",
	2: "CLIENT_DELIVERED",
}
var MessageStatus_value = map[string]int32{
	"NO_DELIVERED":     0,
	"SERVER_DELIVERED": 1,
	"CLIENT_DELIVERED": 2,
}

func (x MessageStatus) String() string {
	return proto.EnumName(MessageStatus_name, int32(x))
}
func (MessageStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Event struct {
	EventId      uint64                       `protobuf:"varint,1,opt,name=event_id" json:"event_id,omitempty"`
	AuthorId     uint64                       `protobuf:"varint,2,opt,name=author_id" json:"author_id,omitempty"`
	AuthorName   string                       `protobuf:"bytes,3,opt,name=author_name" json:"author_name,omitempty"`
	StartDate    int64                        `protobuf:"varint,4,opt,name=start_date" json:"start_date,omitempty"`
	EndDate      int64                        `protobuf:"varint,5,opt,name=end_date" json:"end_date,omitempty"`
	Message      string                       `protobuf:"bytes,6,opt,name=message" json:"message,omitempty"`
	IsPublic     bool                         `protobuf:"varint,7,opt,name=is_public" json:"is_public,omitempty"`
	Geolocation  *Location                    `protobuf:"bytes,8,opt,name=geolocation" json:"geolocation,omitempty"`
	NumAttendees int32                        `protobuf:"varint,9,opt,name=num_attendees" json:"num_attendees,omitempty"`
	NumGuests    int32                        `protobuf:"varint,10,opt,name=num_guests" json:"num_guests,omitempty"`
	CreatedDate  int64                        `protobuf:"varint,11,opt,name=created_date" json:"created_date,omitempty"`
	Participants map[uint64]*EventParticipant `protobuf:"bytes,12,rep,name=participants" json:"participants,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Event) GetGeolocation() *Location {
	if m != nil {
		return m.Geolocation
	}
	return nil
}

func (m *Event) GetParticipants() map[uint64]*EventParticipant {
	if m != nil {
		return m.Participants
	}
	return nil
}

type Location struct {
	Latitude  float32 `protobuf:"fixed32,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float32 `protobuf:"fixed32,2,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *Location) Reset()                    { *m = Location{} }
func (m *Location) String() string            { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()               {}
func (*Location) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type EventParticipant struct {
	UserId    uint64             `protobuf:"varint,1,opt,name=user_id" json:"user_id,omitempty"`
	Name      string             `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Response  AttendanceResponse `protobuf:"varint,3,opt,name=response,enum=common.AttendanceResponse" json:"response,omitempty"`
	Delivered MessageStatus      `protobuf:"varint,4,opt,name=delivered,enum=common.MessageStatus" json:"delivered,omitempty"`
}

func (m *EventParticipant) Reset()                    { *m = EventParticipant{} }
func (m *EventParticipant) String() string            { return proto.CompactTextString(m) }
func (*EventParticipant) ProtoMessage()               {}
func (*EventParticipant) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Friend struct {
	UserId        uint64 `protobuf:"varint,1,opt,name=user_id" json:"user_id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	PictureDigest []byte `protobuf:"bytes,3,opt,name=picture_digest,proto3" json:"picture_digest,omitempty"`
}

func (m *Friend) Reset()                    { *m = Friend{} }
func (m *Friend) String() string            { return proto.CompactTextString(m) }
func (*Friend) ProtoMessage()               {}
func (*Friend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*Event)(nil), "common.Event")
	proto.RegisterType((*Location)(nil), "common.Location")
	proto.RegisterType((*EventParticipant)(nil), "common.EventParticipant")
	proto.RegisterType((*Friend)(nil), "common.Friend")
	proto.RegisterEnum("common.AttendanceResponse", AttendanceResponse_name, AttendanceResponse_value)
	proto.RegisterEnum("common.MessageStatus", MessageStatus_name, MessageStatus_value)
}

var fileDescriptor0 = []byte{
	// 520 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x93, 0xdf, 0x6a, 0xdb, 0x4c,
	0x10, 0xc5, 0x3f, 0xc9, 0xb1, 0x63, 0x8f, 0xe4, 0x44, 0xd1, 0x97, 0x14, 0x35, 0xbd, 0x68, 0x30,
	0x94, 0x86, 0x50, 0x54, 0x70, 0x29, 0x94, 0xde, 0x14, 0x37, 0x51, 0xc1, 0xe0, 0x3f, 0xc1, 0x32,
	0xbd, 0x15, 0x1b, 0x69, 0x70, 0x45, 0xe5, 0x5d, 0xb1, 0xbb, 0x32, 0xf8, 0x11, 0xfa, 0xc8, 0xbd,
	0xeb, 0x68, 0x2d, 0xb7, 0x4e, 0x5b, 0xe8, 0xdd, 0xfa, 0xc7, 0xcc, 0x99, 0xe3, 0x73, 0x10, 0x40,
	0x2a, 0x24, 0x86, 0xa5, 0x14, 0x5a, 0xf8, 0x9d, 0x54, 0xac, 0xd7, 0x82, 0x0f, 0xbe, 0xdb, 0xd0,
	0x8e, 0x36, 0xc8, 0xb5, 0xef, 0x41, 0x17, 0xeb, 0x47, 0x92, 0x67, 0x81, 0x75, 0x65, 0x5d, 0x1f,
	0xf9, 0x67, 0xd0, 0x63, 0x95, 0xfe, 0x22, 0x64, 0x8d, 0x6c, 0x83, 0xfe, 0x07, 0xa7, 0x41, 0x9c,
	0xad, 0x31, 0x68, 0x11, 0xec, 0xf9, 0x3e, 0x80, 0xd2, 0x4c, 0xea, 0x24, 0x63, 0x1a, 0x83, 0x23,
	0x62, 0x2d, 0xa3, 0xc6, 0xb3, 0x1d, 0x69, 0x1b, 0x72, 0x0a, 0xc7, 0x6b, 0x54, 0x8a, 0xad, 0x30,
	0xe8, 0x98, 0x35, 0x92, 0xcf, 0x55, 0x52, 0x56, 0x0f, 0x45, 0x9e, 0x06, 0xc7, 0x84, 0xba, 0xfe,
	0x0b, 0x70, 0x56, 0x28, 0x0a, 0x91, 0x32, 0x9d, 0x0b, 0x1e, 0x74, 0x09, 0x3a, 0x43, 0x2f, 0xdc,
	0x79, 0x0d, 0x27, 0x0d, 0xf7, 0x2f, 0xa0, 0xcf, 0xab, 0x75, 0xc2, 0xb4, 0xa6, 0x1b, 0x88, 0x2a,
	0xe8, 0xd1, 0x60, 0xbb, 0xf6, 0x51, 0xe3, 0x55, 0x85, 0x4a, 0xab, 0x00, 0x0c, 0x3b, 0x07, 0x37,
	0x95, 0x48, 0x2e, 0x1a, 0x2f, 0x8e, 0xf1, 0xf2, 0x16, 0xdc, 0x92, 0x0c, 0xe7, 0x69, 0x5e, 0x32,
	0x4e, 0xb3, 0xee, 0x55, 0x8b, 0x0e, 0x3d, 0xdf, 0x1f, 0x32, 0x81, 0x84, 0xf7, 0x07, 0x13, 0x11,
	0xd7, 0x72, 0x7b, 0x39, 0x85, 0xb3, 0x3f, 0xa0, 0xef, 0x40, 0xeb, 0x2b, 0x6e, 0x9b, 0xc8, 0x5e,
	0x42, 0x7b, 0xc3, 0x8a, 0x0a, 0x4d, 0x5c, 0xce, 0x30, 0x78, 0xa4, 0x78, 0xb0, 0xfb, 0xde, 0x7e,
	0x67, 0x0d, 0x5e, 0x43, 0xf7, 0xe7, 0x5f, 0xa2, 0xbc, 0x0a, 0x7a, 0xe9, 0x2a, 0x43, 0x23, 0x65,
	0xd7, 0xf1, 0x14, 0x82, 0xaf, 0x76, 0xa8, 0x96, 0xb3, 0x07, 0xdf, 0x2c, 0xf0, 0x7e, 0x57, 0xaa,
	0x73, 0xad, 0x14, 0xca, 0x5f, 0xb5, 0xb9, 0x70, 0x64, 0xca, 0xb1, 0x4d, 0xca, 0xaf, 0xa0, 0x2b,
	0x51, 0x95, 0x82, 0xab, 0x5d, 0x5d, 0x27, 0xc3, 0xcb, 0xbd, 0xa9, 0x91, 0xc9, 0x8f, 0xf1, 0x14,
	0x17, 0xcd, 0x84, 0x7f, 0x0d, 0xbd, 0x0c, 0x8b, 0x7c, 0x83, 0x12, 0x33, 0xd3, 0xe4, 0xc9, 0xf0,
	0x62, 0x3f, 0x3e, 0xdd, 0xb5, 0x17, 0x6b, 0xa6, 0x2b, 0x35, 0xf8, 0x00, 0x9d, 0x4f, 0x32, 0xa7,
	0xfd, 0x7f, 0x19, 0x78, 0x02, 0x27, 0x65, 0x9e, 0xea, 0x4a, 0x62, 0x92, 0xe5, 0x2b, 0xaa, 0xc6,
	0xd8, 0x70, 0x6f, 0x62, 0xf0, 0xff, 0x62, 0xe0, 0x14, 0x9c, 0xd9, 0x3c, 0x59, 0x44, 0xf1, 0xfd,
	0x7c, 0x16, 0x47, 0xde, 0x7f, 0x7e, 0x1f, 0x7a, 0x04, 0x46, 0x71, 0x3c, 0x8e, 0x97, 0x9e, 0x45,
	0xa9, 0xf4, 0x6f, 0x47, 0xb3, 0xd9, 0x7c, 0xb9, 0x47, 0x36, 0xb5, 0xde, 0x69, 0xde, 0xad, 0x9b,
	0x29, 0xf4, 0x1f, 0xd9, 0xa4, 0x5c, 0x5d, 0x5a, 0xbf, 0x8b, 0x26, 0xe3, 0xcf, 0xd1, 0x22, 0xba,
	0x23, 0xc1, 0x73, 0xf0, 0xe2, 0x68, 0x41, 0xbf, 0x0e, 0xa8, 0x55, 0xd3, 0xdb, 0xc9, 0x38, 0x9a,
	0x2d, 0x0f, 0xa8, 0xfd, 0xf1, 0x19, 0x3c, 0x45, 0x15, 0x96, 0x88, 0x65, 0x81, 0x21, 0x93, 0xb8,
	0x15, 0x55, 0xce, 0x9b, 0x3c, 0x1e, 0x3a, 0xe6, 0x4b, 0x7a, 0xf3, 0x23, 0x00, 0x00, 0xff, 0xff,
	0xc3, 0x20, 0xb5, 0x94, 0x57, 0x03, 0x00, 0x00,
}
