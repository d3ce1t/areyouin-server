// Code generated by protoc-gen-go.
// source: core.proto
// DO NOT EDIT!

/*
Package core is a generated protocol buffer package.

It is generated from these files:
	core.proto

It has these top-level messages:
	UserAccount
	Event
	Location
	EventParticipant
	Friend
	Group
	FriendRequest
*/
package core

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SyncBehaviour int32

const (
	// Previous groups are removed and new ones are added.
	SyncBehaviour_TRUNCATE SyncBehaviour = 0
	// Previous groups are updated, new ones are added
	SyncBehaviour_PRESERVE SyncBehaviour = 1
)

var SyncBehaviour_name = map[int32]string{
	0: "TRUNCATE",
	1: "PRESERVE",
}
var SyncBehaviour_value = map[string]int32{
	"TRUNCATE": 0,
	"PRESERVE": 1,
}

func (x SyncBehaviour) String() string {
	return proto.EnumName(SyncBehaviour_name, int32(x))
}
func (SyncBehaviour) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AttendanceResponse int32

const (
	AttendanceResponse_NO_RESPONSE   AttendanceResponse = 0
	AttendanceResponse_NO_ASSIST     AttendanceResponse = 1
	AttendanceResponse_CANNOT_ASSIST AttendanceResponse = 2
	AttendanceResponse_ASSIST        AttendanceResponse = 3
)

var AttendanceResponse_name = map[int32]string{
	0: "NO_RESPONSE",
	1: "NO_ASSIST",
	2: "CANNOT_ASSIST",
	3: "ASSIST",
}
var AttendanceResponse_value = map[string]int32{
	"NO_RESPONSE":   0,
	"NO_ASSIST":     1,
	"CANNOT_ASSIST": 2,
	"ASSIST":        3,
}

func (x AttendanceResponse) String() string {
	return proto.EnumName(AttendanceResponse_name, int32(x))
}
func (AttendanceResponse) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type EventState int32

const (
	EventState_NOT_STARTED EventState = 0
	EventState_ONGOING     EventState = 1
	EventState_FINISHED    EventState = 2
	EventState_CANCELLED   EventState = 3
)

var EventState_name = map[int32]string{
	0: "NOT_STARTED",
	1: "ONGOING",
	2: "FINISHED",
	3: "CANCELLED",
}
var EventState_value = map[string]int32{
	"NOT_STARTED": 0,
	"ONGOING":     1,
	"FINISHED":    2,
	"CANCELLED":   3,
}

func (x EventState) String() string {
	return proto.EnumName(EventState_name, int32(x))
}
func (EventState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type InvitationStatus int32

const (
	InvitationStatus_NO_DELIVERED     InvitationStatus = 0
	InvitationStatus_SERVER_DELIVERED InvitationStatus = 1
	InvitationStatus_CLIENT_DELIVERED InvitationStatus = 2
)

var InvitationStatus_name = map[int32]string{
	0: "NO_DELIVERED",
	1: "SERVER_DELIVERED",
	2: "CLIENT_DELIVERED",
}
var InvitationStatus_value = map[string]int32{
	"NO_DELIVERED":     0,
	"SERVER_DELIVERED": 1,
	"CLIENT_DELIVERED": 2,
}

func (x InvitationStatus) String() string {
	return proto.EnumName(InvitationStatus_name, int32(x))
}
func (InvitationStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type UserAccount struct {
	Name          string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Email         string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Picture       []byte `protobuf:"bytes,3,opt,name=picture,proto3" json:"picture,omitempty"`
	PictureDigest []byte `protobuf:"bytes,4,opt,name=picture_digest,json=pictureDigest,proto3" json:"picture_digest,omitempty"`
	FbId          string `protobuf:"bytes,5,opt,name=fbId" json:"fbId,omitempty"`
}

func (m *UserAccount) Reset()                    { *m = UserAccount{} }
func (m *UserAccount) String() string            { return proto.CompactTextString(m) }
func (*UserAccount) ProtoMessage()               {}
func (*UserAccount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Event struct {
	EventId       int64                       `protobuf:"varint,1,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	AuthorId      int64                       `protobuf:"varint,2,opt,name=author_id,json=authorId" json:"author_id,omitempty"`
	AuthorName    string                      `protobuf:"bytes,3,opt,name=author_name,json=authorName" json:"author_name,omitempty"`
	StartDate     int64                       `protobuf:"varint,4,opt,name=start_date,json=startDate" json:"start_date,omitempty"`
	EndDate       int64                       `protobuf:"varint,5,opt,name=end_date,json=endDate" json:"end_date,omitempty"`
	Message       string                      `protobuf:"bytes,6,opt,name=message" json:"message,omitempty"`
	IsPublic      bool                        `protobuf:"varint,7,opt,name=is_public,json=isPublic" json:"is_public,omitempty"`
	Geolocation   *Location                   `protobuf:"bytes,8,opt,name=geolocation" json:"geolocation,omitempty"`
	NumAttendees  int32                       `protobuf:"varint,9,opt,name=num_attendees,json=numAttendees" json:"num_attendees,omitempty"`
	NumGuests     int32                       `protobuf:"varint,10,opt,name=num_guests,json=numGuests" json:"num_guests,omitempty"`
	CreatedDate   int64                       `protobuf:"varint,11,opt,name=created_date,json=createdDate" json:"created_date,omitempty"`
	Participants  map[int64]*EventParticipant `protobuf:"bytes,12,rep,name=participants" json:"participants,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	InboxPosition int64                       `protobuf:"varint,13,opt,name=inbox_position,json=inboxPosition" json:"inbox_position,omitempty"`
	State         EventState                  `protobuf:"varint,14,opt,name=state,enum=core.EventState" json:"state,omitempty"`
	PictureDigest []byte                      `protobuf:"bytes,15,opt,name=picture_digest,json=pictureDigest,proto3" json:"picture_digest,omitempty"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Event) GetGeolocation() *Location {
	if m != nil {
		return m.Geolocation
	}
	return nil
}

func (m *Event) GetParticipants() map[int64]*EventParticipant {
	if m != nil {
		return m.Participants
	}
	return nil
}

type Location struct {
	Latitude  float32 `protobuf:"fixed32,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float32 `protobuf:"fixed32,2,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *Location) Reset()                    { *m = Location{} }
func (m *Location) String() string            { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()               {}
func (*Location) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type EventParticipant struct {
	UserId    int64              `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Name      string             `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Response  AttendanceResponse `protobuf:"varint,3,opt,name=response,enum=core.AttendanceResponse" json:"response,omitempty"`
	Delivered InvitationStatus   `protobuf:"varint,4,opt,name=delivered,enum=core.InvitationStatus" json:"delivered,omitempty"`
}

func (m *EventParticipant) Reset()                    { *m = EventParticipant{} }
func (m *EventParticipant) String() string            { return proto.CompactTextString(m) }
func (*EventParticipant) ProtoMessage()               {}
func (*EventParticipant) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Friend struct {
	UserId        int64  `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	PictureDigest []byte `protobuf:"bytes,3,opt,name=picture_digest,json=pictureDigest,proto3" json:"picture_digest,omitempty"`
}

func (m *Friend) Reset()                    { *m = Friend{} }
func (m *Friend) String() string            { return proto.CompactTextString(m) }
func (*Friend) ProtoMessage()               {}
func (*Friend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type Group struct {
	Id      int32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name    string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Size    int32   `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
	Members []int64 `protobuf:"varint,4,rep,name=members" json:"members,omitempty"`
}

func (m *Group) Reset()                    { *m = Group{} }
func (m *Group) String() string            { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()               {}
func (*Group) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type FriendRequest struct {
	FriendId    int64  `protobuf:"varint,1,opt,name=friend_id,json=friendId" json:"friend_id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Email       string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	CreatedDate int64  `protobuf:"varint,4,opt,name=created_date,json=createdDate" json:"created_date,omitempty"`
}

func (m *FriendRequest) Reset()                    { *m = FriendRequest{} }
func (m *FriendRequest) String() string            { return proto.CompactTextString(m) }
func (*FriendRequest) ProtoMessage()               {}
func (*FriendRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func init() {
	proto.RegisterType((*UserAccount)(nil), "core.UserAccount")
	proto.RegisterType((*Event)(nil), "core.Event")
	proto.RegisterType((*Location)(nil), "core.Location")
	proto.RegisterType((*EventParticipant)(nil), "core.EventParticipant")
	proto.RegisterType((*Friend)(nil), "core.Friend")
	proto.RegisterType((*Group)(nil), "core.Group")
	proto.RegisterType((*FriendRequest)(nil), "core.FriendRequest")
	proto.RegisterEnum("core.SyncBehaviour", SyncBehaviour_name, SyncBehaviour_value)
	proto.RegisterEnum("core.AttendanceResponse", AttendanceResponse_name, AttendanceResponse_value)
	proto.RegisterEnum("core.EventState", EventState_name, EventState_value)
	proto.RegisterEnum("core.InvitationStatus", InvitationStatus_name, InvitationStatus_value)
}

func init() { proto.RegisterFile("core.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 868 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x55, 0x5f, 0xaf, 0xe2, 0x54,
	0x10, 0x97, 0x96, 0x42, 0x99, 0x02, 0xcb, 0x9e, 0x6c, 0xb4, 0xae, 0xae, 0xae, 0x18, 0xff, 0xe4,
	0x6a, 0x88, 0xb9, 0xfa, 0x60, 0x7c, 0x63, 0xa1, 0x8b, 0x4d, 0x48, 0x21, 0xa7, 0xec, 0x1a, 0x13,
	0x13, 0x52, 0xda, 0xb3, 0xdc, 0x93, 0x0b, 0x6d, 0xed, 0x1f, 0x14, 0x3f, 0x83, 0x9f, 0xc2, 0x57,
	0xbf, 0xa2, 0x0f, 0xce, 0x39, 0xa7, 0x5c, 0xea, 0xbd, 0xf8, 0xb0, 0x6f, 0x33, 0xbf, 0xdf, 0x9c,
	0x99, 0xf9, 0x75, 0x66, 0x00, 0x20, 0x4c, 0x32, 0x36, 0x4a, 0xb3, 0xa4, 0x48, 0x48, 0x53, 0xd8,
	0xc3, 0x3f, 0x1b, 0x60, 0xbd, 0xca, 0x59, 0x36, 0x0e, 0xc3, 0xa4, 0x8c, 0x0b, 0x42, 0xa0, 0x19,
	0x07, 0x7b, 0x66, 0x37, 0x9e, 0x37, 0xbe, 0xec, 0x50, 0x69, 0x93, 0x27, 0x60, 0xb0, 0x7d, 0xc0,
	0x77, 0xb6, 0x26, 0x41, 0xe5, 0x10, 0x1b, 0xda, 0x29, 0x0f, 0x8b, 0x32, 0x63, 0xb6, 0x8e, 0x78,
	0x97, 0x9e, 0x5c, 0xf2, 0x19, 0xf4, 0x2b, 0x73, 0x1d, 0xf1, 0x2d, 0xcb, 0x0b, 0xbb, 0x29, 0x03,
	0x7a, 0x15, 0x3a, 0x95, 0xa0, 0x28, 0xf5, 0x66, 0xe3, 0x46, 0xb6, 0xa1, 0x4a, 0x09, 0x7b, 0xf8,
	0x4f, 0x13, 0x0c, 0xe7, 0xc0, 0xb0, 0x91, 0xf7, 0xc1, 0x64, 0xc2, 0x58, 0xf3, 0x48, 0x36, 0xa3,
	0xd3, 0xb6, 0xf4, 0xdd, 0x88, 0x7c, 0x00, 0x9d, 0xa0, 0x2c, 0x6e, 0x92, 0x4c, 0x70, 0x9a, 0xe4,
	0x4c, 0x05, 0x20, 0xf9, 0x31, 0x58, 0x15, 0x29, 0x75, 0xe8, 0x32, 0x39, 0x28, 0xc8, 0x13, 0x6a,
	0x9e, 0x01, 0xe4, 0x45, 0x90, 0x15, 0xeb, 0x28, 0x28, 0x98, 0xec, 0x4c, 0xa7, 0x1d, 0x89, 0x4c,
	0x11, 0x90, 0x75, 0xe3, 0x48, 0x91, 0x46, 0x55, 0x37, 0x8e, 0x24, 0x85, 0x8a, 0xf7, 0x2c, 0xcf,
	0x83, 0x2d, 0xb3, 0x5b, 0x32, 0xed, 0xc9, 0x15, 0x1d, 0xf1, 0x7c, 0x9d, 0x96, 0x9b, 0x1d, 0x0f,
	0xed, 0x36, 0x72, 0x26, 0x35, 0x79, 0xbe, 0x94, 0x3e, 0xf9, 0x06, 0xac, 0x2d, 0x4b, 0x76, 0x49,
	0x18, 0x14, 0x3c, 0x89, 0x6d, 0x13, 0x69, 0xeb, 0xba, 0x3f, 0x92, 0xa3, 0x98, 0x57, 0x28, 0xad,
	0x87, 0x90, 0x4f, 0xa1, 0x17, 0x97, 0xfb, 0x75, 0x50, 0x14, 0x58, 0x9a, 0xb1, 0xdc, 0xee, 0xe0,
	0x1b, 0x83, 0x76, 0x11, 0x1c, 0x9f, 0x30, 0xa1, 0x43, 0x04, 0x6d, 0x4b, 0xfc, 0x96, 0xb9, 0x0d,
	0x32, 0xa2, 0x83, 0xc8, 0x4c, 0x02, 0xe4, 0x13, 0xe8, 0x86, 0x19, 0xc3, 0xb6, 0x2b, 0x2d, 0x96,
	0xd4, 0x62, 0x55, 0x98, 0xd4, 0x33, 0x86, 0x6e, 0x8a, 0xb2, 0x79, 0xc8, 0xd3, 0x20, 0xc6, 0x1c,
	0xdd, 0xe7, 0x3a, 0x76, 0xf6, 0x4c, 0x75, 0x26, 0xa7, 0x30, 0x5a, 0xd6, 0x78, 0x27, 0x2e, 0xb2,
	0x23, 0xfd, 0xcf, 0x13, 0x31, 0x6a, 0x1e, 0x6f, 0x92, 0xdf, 0xd7, 0x69, 0x92, 0x73, 0x29, 0xaf,
	0x27, 0xeb, 0xf4, 0x24, 0xba, 0xac, 0x40, 0xf2, 0x39, 0x18, 0xf8, 0x85, 0xb1, 0x8b, 0x3e, 0xb2,
	0xfd, 0xeb, 0x41, 0xad, 0x84, 0x2f, 0x70, 0xaa, 0xe8, 0x0b, 0x9b, 0xf3, 0xe8, 0xc2, 0xe6, 0x3c,
	0xfd, 0x09, 0x1e, 0x3f, 0x68, 0x8c, 0x0c, 0x40, 0xbf, 0x65, 0xc7, 0x6a, 0x57, 0x84, 0x49, 0xbe,
	0x06, 0xe3, 0x10, 0xec, 0x4a, 0x26, 0x77, 0xc4, 0xba, 0x7e, 0xb7, 0x56, 0xb5, 0xf6, 0x9c, 0xaa,
	0xa0, 0x1f, 0xb4, 0xef, 0x1b, 0xc3, 0x29, 0x98, 0xa7, 0x89, 0x90, 0xa7, 0x60, 0xee, 0xd0, 0x2a,
	0xca, 0x48, 0x5d, 0x83, 0x46, 0xef, 0x7c, 0xf2, 0x21, 0x74, 0x76, 0x49, 0xbc, 0x55, 0xa4, 0x26,
	0xc9, 0x33, 0x30, 0xfc, 0xbb, 0x01, 0x83, 0xfb, 0x55, 0xc8, 0x7b, 0xd0, 0x2e, 0xf1, 0xce, 0xce,
	0xeb, 0xdc, 0x12, 0x2e, 0x2e, 0xec, 0xe9, 0xe2, 0xb4, 0xda, 0xc5, 0x7d, 0x07, 0x66, 0xc6, 0xf2,
	0x34, 0x89, 0x73, 0xb5, 0xc1, 0xfd, 0x6b, 0x5b, 0x35, 0xaf, 0xc6, 0x1f, 0xc4, 0x21, 0xa3, 0x15,
	0x4f, 0xef, 0x22, 0xf1, 0x55, 0x27, 0x62, 0x3b, 0x7e, 0x60, 0x19, 0x8b, 0xe4, 0x62, 0xf7, 0x4f,
	0x9a, 0xdd, 0xf8, 0xc0, 0x0b, 0x29, 0x4b, 0x7c, 0xee, 0x32, 0xa7, 0xe7, 0xc0, 0xe1, 0x2f, 0xd0,
	0x7a, 0x99, 0x71, 0xcc, 0xfa, 0x76, 0x2d, 0x3e, 0x1c, 0x95, 0x7e, 0x61, 0x54, 0xc3, 0x9f, 0xc1,
	0x98, 0x65, 0x49, 0x99, 0x92, 0x3e, 0x68, 0x55, 0x5e, 0x83, 0xa2, 0x75, 0x31, 0x27, 0x62, 0x39,
	0xff, 0x43, 0x49, 0x36, 0xa8, 0xb4, 0xd5, 0xd1, 0xed, 0x37, 0x2c, 0xcb, 0x51, 0x92, 0x2e, 0xce,
	0xb1, 0x72, 0x87, 0x47, 0xe8, 0xa9, 0xc6, 0x29, 0xfb, 0x55, 0xec, 0xbc, 0xb8, 0xc2, 0x37, 0x12,
	0x38, 0x2b, 0x30, 0x15, 0xf0, 0x3f, 0x1a, 0xee, 0x7e, 0xd8, 0xf4, 0xfa, 0x0f, 0xdb, 0xfd, 0xcb,
	0x69, 0x3e, 0xb8, 0x9c, 0xab, 0xaf, 0xa0, 0xe7, 0x1f, 0xe3, 0xf0, 0x05, 0xbb, 0x09, 0x0e, 0x3c,
	0x29, 0x33, 0xd2, 0x05, 0x73, 0x45, 0x5f, 0x79, 0x93, 0xf1, 0xca, 0x19, 0xbc, 0x23, 0xbc, 0x25,
	0x75, 0x7c, 0x87, 0xbe, 0x76, 0x06, 0x8d, 0x2b, 0x1f, 0xc8, 0xc3, 0xb1, 0x91, 0x47, 0x60, 0x79,
	0x8b, 0x35, 0x46, 0x2d, 0x17, 0x9e, 0x2f, 0x1e, 0xf5, 0xa0, 0x83, 0xc0, 0xd8, 0xf7, 0x5d, 0x7f,
	0x35, 0x68, 0x90, 0xc7, 0xd0, 0x9b, 0x8c, 0x3d, 0x6f, 0xb1, 0x3a, 0x41, 0x1a, 0x01, 0x68, 0x55,
	0xb6, 0x7e, 0x35, 0x03, 0x38, 0x9f, 0x8f, 0x4a, 0xb6, 0x5a, 0xfb, 0xab, 0x31, 0x5d, 0x39, 0x53,
	0x4c, 0x66, 0x41, 0x7b, 0xe1, 0xcd, 0x16, 0xae, 0x37, 0xc3, 0x54, 0xd8, 0xce, 0x4b, 0xd7, 0x73,
	0xfd, 0x1f, 0x91, 0xd2, 0x44, 0x1d, 0x4c, 0x3c, 0x71, 0xe6, 0x73, 0x74, 0xf5, 0xab, 0x25, 0x0c,
	0xee, 0x6f, 0x07, 0x9e, 0x52, 0x17, 0x5b, 0x99, 0x3a, 0x73, 0xf7, 0xb5, 0x43, 0x65, 0xbe, 0x27,
	0x30, 0x90, 0x72, 0x68, 0x0d, 0x6d, 0x08, 0x74, 0x32, 0x77, 0x1d, 0x6f, 0x55, 0x43, 0xb5, 0x17,
	0x5f, 0xc0, 0x47, 0x2c, 0x1f, 0xa5, 0x8c, 0xa5, 0x3b, 0x36, 0x0a, 0x32, 0x76, 0x4c, 0x4a, 0x1e,
	0x8f, 0xf2, 0xe8, 0x76, 0x14, 0xb3, 0xe2, 0xb7, 0x24, 0xbb, 0xfd, 0x4b, 0x6b, 0x4e, 0x70, 0x2b,
	0x37, 0x2d, 0xf9, 0x47, 0xf4, 0xed, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xb4, 0x48, 0x7b, 0xcc,
	0x96, 0x06, 0x00, 0x00,
}
