// Code generated by protoc-gen-go.
// source: core.proto
// DO NOT EDIT!

/*
Package protocol is a generated protocol buffer package.

It is generated from these files:
	core.proto
	protocol.proto

It has these top-level messages:
	Event
	Location
	EventDate
	EventParticipant
	ListCursor
	ListPublicEvents
	CreateEvent
	CancelEvent
	InviteUsers
	CancelUserInvitation
	ConfirmAttendance
	ModifyEvent
	VoteChange
	ReadEvent
	UserPosition
	UserPositionRange
	Ping
	CreateUserAccount
	NewAuthToken
	UserAuthentication
	EventCreated
	EventCancelled
	EventExpired
	EventModified
	InvitationReceived
	InvitationCancelled
	AttendanceStatus
	EventChangeProposed
	VotingStatus
	ChangeAccepted
	ChangeDiscarded
	AccessGranted
	EventInfo
	EventsList
	Error
	Ok
	Pong
*/
package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EventType int32

const (
	EventType_PRIVATE_EVENT EventType = 0
	EventType_PUBLIC_EVENT  EventType = 1
)

var EventType_name = map[int32]string{
	0: "PRIVATE_EVENT",
	1: "PUBLIC_EVENT",
}
var EventType_value = map[string]int32{
	"PRIVATE_EVENT": 0,
	"PUBLIC_EVENT":  1,
}

func (x EventType) String() string {
	return proto.EnumName(EventType_name, int32(x))
}

type AttendanceResponse int32

const (
	AttendanceResponse_NO_RESPONSE   AttendanceResponse = 0
	AttendanceResponse_ASSIST        AttendanceResponse = 1
	AttendanceResponse_CANNOT_ASSIST AttendanceResponse = 2
	AttendanceResponse_NO_ASSIST     AttendanceResponse = 3
)

var AttendanceResponse_name = map[int32]string{
	0: "NO_RESPONSE",
	1: "ASSIST",
	2: "CANNOT_ASSIST",
	3: "NO_ASSIST",
}
var AttendanceResponse_value = map[string]int32{
	"NO_RESPONSE":   0,
	"ASSIST":        1,
	"CANNOT_ASSIST": 2,
	"NO_ASSIST":     3,
}

func (x AttendanceResponse) String() string {
	return proto.EnumName(AttendanceResponse_name, int32(x))
}

type MessageStatus int32

const (
	MessageStatus_NO_DELIVERED     MessageStatus = 0
	MessageStatus_SERVER_DELIVERED MessageStatus = 1
	MessageStatus_CLIENT_DELIVERED MessageStatus = 2
)

var MessageStatus_name = map[int32]string{
	0: "NO_DELIVERED",
	1: "SERVER_DELIVERED",
	2: "CLIENT_DELIVERED",
}
var MessageStatus_value = map[string]int32{
	"NO_DELIVERED":     0,
	"SERVER_DELIVERED": 1,
	"CLIENT_DELIVERED": 2,
}

func (x MessageStatus) String() string {
	return proto.EnumName(MessageStatus_name, int32(x))
}

type Event struct {
	EventId            uint64     `protobuf:"varint,1,opt,name=event_id" json:"event_id,omitempty"`
	AuthorId           uint64     `protobuf:"varint,2,opt,name=author_id" json:"author_id,omitempty"`
	AuthorName         string     `protobuf:"bytes,3,opt,name=author_name" json:"author_name,omitempty"`
	CreationDate       int64      `protobuf:"varint,4,opt,name=creation_date" json:"creation_date,omitempty"`
	Date               *EventDate `protobuf:"bytes,5,opt,name=date" json:"date,omitempty"`
	Message            string     `protobuf:"bytes,6,opt,name=message" json:"message,omitempty"`
	Type               EventType  `protobuf:"varint,7,opt,name=type,enum=protocol.EventType" json:"type,omitempty"`
	Geolocation        *Location  `protobuf:"bytes,8,opt,name=geolocation" json:"geolocation,omitempty"`
	NumberParticipants uint32     `protobuf:"varint,9,opt,name=number_participants" json:"number_participants,omitempty"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}

func (m *Event) GetDate() *EventDate {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Event) GetGeolocation() *Location {
	if m != nil {
		return m.Geolocation
	}
	return nil
}

type Location struct {
	Latitude  float32 `protobuf:"fixed32,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float32 `protobuf:"fixed32,2,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}

type EventDate struct {
	StartDate int64 `protobuf:"varint,1,opt,name=start_date" json:"start_date,omitempty"`
	EndDate   int64 `protobuf:"varint,2,opt,name=end_date" json:"end_date,omitempty"`
}

func (m *EventDate) Reset()         { *m = EventDate{} }
func (m *EventDate) String() string { return proto.CompactTextString(m) }
func (*EventDate) ProtoMessage()    {}

type EventParticipant struct {
	UserId    uint64             `protobuf:"varint,1,opt,name=user_id" json:"user_id,omitempty"`
	Name      string             `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Response  AttendanceResponse `protobuf:"varint,3,opt,name=response,enum=protocol.AttendanceResponse" json:"response,omitempty"`
	Delivered MessageStatus      `protobuf:"varint,4,opt,name=delivered,enum=protocol.MessageStatus" json:"delivered,omitempty"`
}

func (m *EventParticipant) Reset()         { *m = EventParticipant{} }
func (m *EventParticipant) String() string { return proto.CompactTextString(m) }
func (*EventParticipant) ProtoMessage()    {}

func init() {
	proto.RegisterType((*Event)(nil), "protocol.Event")
	proto.RegisterType((*Location)(nil), "protocol.Location")
	proto.RegisterType((*EventDate)(nil), "protocol.EventDate")
	proto.RegisterType((*EventParticipant)(nil), "protocol.EventParticipant")
	proto.RegisterEnum("protocol.EventType", EventType_name, EventType_value)
	proto.RegisterEnum("protocol.AttendanceResponse", AttendanceResponse_name, AttendanceResponse_value)
	proto.RegisterEnum("protocol.MessageStatus", MessageStatus_name, MessageStatus_value)
}
